// CW collector core API

var request = require('request')

var Collector = module.exports = function (acceptData) { // acceptData is required for pull collectors

  // supported collector events
  var collectorEvents = {
    refreshRequest: [] // callback functions
  }

  return {

    push: function (options) {

      return {}

    },

    pull: function (options) {

      // TODO: mandatory options

      // take live requests - currently ONLY request messages
      process.on('message', function (params) {

        //console.log(options)

        collectorEvents['refreshRequest'].forEach(function (callback) {
          callback(params) // handled by the object below, most likely
        })

      })


      var pullApi = {

        request: function (newOptions) { // newOptions is upto the developer to pass or not!

          newOptions = newOptions || {}

          var reqOptions = updateReqOptions(options, newOptions)

          request(reqOptions, function(err, res, body) {

            if (err) {
              acceptData(err)
            }
            else {
              acceptData(err, body)
            }
          })

        },

        // live request
        on: function (event, callback) {

          //console.log(event)
          //console.log(callback)

          if (!(event in collectorEvents)) {
            throw new Error(event + ': unknown event')
          }
          else {
            //console.log(event)
            collectorEvents[event].push(callback)
          }

        }

      }


      return pullApi


    }

  }

}


function updateReqOptions(options, newOptions) {

  var reqOptions = {}

  reqOptions.body = newOptions.body || options.body

  if (options.flexible) {
    reqOptions.method = newOptions.method || options.method || 'get'
    if (newOptions.query) {
      reqOptions.uri = (reqOptions.path  || options.path) + '?' + newOptions.query
    }
    else {
      reqOptions.uri = (reqOptions.path || options.path) + '?' + options.query
    }
  }
  else {
    reqOptions.method = options.method
    if (options.query) {
      reqOptions.uri = options.path + '?' + options.query
    }
    else {
      reqOptions.uri = options.path
    }
  }

  return reqOptions

}

