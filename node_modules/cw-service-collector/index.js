
var pkg = require(__dirname + '/package.json')
var start = require(__dirname + '/lib/start.js')
var stop = require(__dirname + '/lib/start.js')
var restart = require(__dirname + '/lib/start.js')
var stats = require(__dirname + '/lib/start.js')
var path = require('path')
var mqclient = require('mqclient/amqp')

var collectorEvents = {
  'ready': []
}

module.exports = {

  on: function (event, callback) {

    if (event in collectorEvents) {
      collectorEvents[event].push(callback)
    }
    else {
      throw new Error(event + ': unknown event')
    }

  },

  // used for sending refresh requests
  refresh: function (collector, params, callback) {

    var refreshRequestChannel = collector + ':refresh'
    //console.log('REFRESH: ', refreshRequestChannel, params)
    mqclient.pub(refreshRequestChannel, params, function () {
      //console.log('REQUESTED')
      return callback && callback()
    })

  },

  // abstracted interface for listening to MQ messages
  listen: function (channel, callback) {

    //console.log('LISTENING: ', channel)

    mqclient.sub(channel, function (err, msg) {

      var result

      try {
        result = JSON.parse(msg)
      }
      catch (err) {
        result = msg
      }

      callback(err, result)

    })

  },

  // used for commandline tools
  command: function (opts) {

    if (opts.start) {
      start(opts)
    }

    else if (opts.stop) {
      stop(opts)
    }

    else if (opts.restart) {
      restart(opts)
    }

    else if (opts.restart) {
      restart(opts)
    }

    else {
      console.log('Command not supported')
      console.log('Type `cw collector --help` for supported commands')
    }

  }

}

