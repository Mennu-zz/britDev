
var Collector = require('/usr/local/lib/node_modules/cw-command/node_modules/cw-service-collector/lib/api')(dataAcceptor)

function dataAcceptor(err, data, reqOptions) {

  var collectorName = __dirname.split('/').slice(-1)[0]
  var message

  if (err) {
    //console.log(data)
    message = {
      code: 1,
      body: err
    }
    process.send(message)
  }
  else {

    if (acceptData) {

      var msg = {
        origin: {
          type: 'collector',
          name: collectorName
        },
        body: data,
        time: Date.now()
      }

      acceptData(err, msg, reqOptions).then(

        function (resolved) {
          //console.log(resolved)
          message = {
            code: 0,
            body: resolved
          }
          process.send(message)
        },

        function (err) {
          //console.log(err)
          message = {
            code: 1,
            body: err
          }
          process.send(message)
        }
      )
    }
    else {
      throw new Error('acceptData not defined')
    }

  }

}

/************* developer code after this line **************/

var Q = require('q')
var requestInterval = 5000 // 10 secs

var collector = Collector.pull({
  flexible: false, // excdepr for scenario every field can be changed with subsqequent queries, defaults to false
  scenario: 'us-airports', // scenario
  path: 'http://services.faa.gov/airport/status/SFO', //path
  method: 'get', // request method, default is get
  query: 'format=application/json', // any query params
  body: ''
})

// listen to "refreshRequest" for real-time queries
collector.on('refreshRequest', function (params) { // collectorName is mandarory for refreshers

  // if required, check for conditions in params - for eg: caching
  //console.log('refreshRequest CALLED', params)
  // console.log('ADDRESS:', collectorName)
  collector.request() // {} and collectorName mandarory for refreshers
})

// acceptData function is mandatory, has access to the res object for extra details
// it MUST return a promise, use whatever
function acceptData(message) {

  console.log('SFO COLLECTOR REFRESH DATA')

  console.log(message)
  console.log('--------------------------')
  console.log(message.origin) // WILL NOT BE AUTO-CONVERTED, STRINGIFY YOUR SELF!
  console.log('--------------------------')
  console.log(message.body)
  console.log('--------------------------')
  console.log(message.time)
  console.log('\n**************************\n')

  var d = Q.defer()

  process.nextTick(function () {

    d.resolve({
      id: Date.now(),
      body: message.body
    })

  })

  return d.promise
}

